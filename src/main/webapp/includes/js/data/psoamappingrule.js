/**
 * Created by sadnana on 29/02/16.
 * http://www.howtocreate.co.uk/tutorials/jsexamples/syntax/prepareInline.html
 */
var psoaRuleMLMapping = '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%% TABLE: Npatient\n%% TABLE PREDICATE: db_Npatient\n%% PRIMARY-KEY-TO-ENTITY FUNCTION: entityForPatient\n%% INVERSE FOR PRIMARY-KEY-TO-ENTITY FUNCTION: entityForPatientToPatWID\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n% Setting up primary key PatWID\n% entityForPatientToPatWID is an inverse function for entityForPatient.\n\nfof(inverse_for_entityForPatient_1,axiom,\n   ! [PatWID] : (entityForPatientToPatWID(entityForPatient(PatWID)) = PatWID)\n).\n\nfof(inverse_for_entityForPatient_2,axiom,\n   ! [P] : (entityForPatient(entityForPatientToPatWID(P)) = P)\n).\n\n% Mapping the attribute Npatient.patWID to entities of the concept HAI:Patient.\n\nfof(table_Npatient_represents_instances_of_concept_Person,axiom,\n  ! [PatWID, PatFacWID, PatLastName,PatFirstName] :\n  (db_Npatient(PatWID, PatFacWID, PatLastName,PatFirstName)\n  =>\n  p_Patient(entityForPatient(PatWID)))\n).\n\n% Setting up foreign key PatFacWID for table Nfacility\n% Mapping the attribute Npatient.PatFacWID to attribute Nfacility.FacWID.\n\nfof(attribute_PatFacWID_assigned_fk_to_table_Nfacility,axiom,\n  ! [PatWID, PatFacWID, PatLastName,PatFirstName] :\n  (db_Npatient(PatWID, PatFacWID, PatLastName,PatFirstName)\n  =>\n  p_has_facility_reference(entityForPatient(PatWID), entityForFacility(PatFacWID)))\n).\n\n% Mapping the attribute Npatient.patFirstName to the property HAI:has_first_name.\n\nfof(attribute_PatFirstName_assigns_has_first_name,axiom,\n  ! [PatWID, PatFacWID, PatLastName,PatFirstName] :\n  (db_Npatient(PatWID, PatFacWID, PatLastName, PatFirstName)\n  =>\n  p_has_first_name(entityForPatient(PatWID),PatFirstName))\n).\n\n% Mapping the attribute Npatient.patLastName to the property HAI:has_last_name.\n\nfof(attribute_PatLastName_assigns_has_last_name,axiom,\n  ! [PatWID, PatFacWID, PatLastName,PatFirstName] :\n  (db_Npatient(PatWID, PatFacWID, PatLastName, PatFirstName)\n  =>\n  p_has_last_name(entityForPatient(PatWID),PatLastName))\n).\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%% TABLE: Nfacility\n%% TABLE PREDICATE: db_Nfacility\n%% PRIMARY-KEY-TO-ENTITY FUNCTION: entityForFacility\n%% INVERSE FOR PRIMARY-KEY-TO-ENTITY FUNCTION: entityForFacilityToFacWID\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n% Setting up primary key FacWID\n% entityForFacilityToFacWID is an inverse function for entityForFacility.\n\nfof(inverse_for_entityForFacility_1,axiom,\n   ! [FacWID] : (entityForFacilityToFacWID(entityForFacility(FacWID)) = FacWID)\n).\n\nfof(inverse_for_entityForFacility_2,axiom,\n   ! [P] : (entityForFacility(entityForFacilityToFacWID(P)) = P)\n).\n\n% Mapping the attribute Nfacility.FacWID to entities of the concept HAI:Facility.\n\nfof(table_Nfacility_represents_instances_of_concept_Facility,axiom,\n  ! [FacWID, FacFacilityDesc] :\n  (db_Nfacility(FacWID, FacFacilityDesc)\n  =>\n  p_Facility(entityForFacility(FacWID)))\n).\n\n% Mapping the attribute Nfacility.FacFacilityDesc to the property HAI:has_facility_description.\n\nfof(attribute_PatLastName_assigns_has_last_name,axiom,\n  ! [FacWID, FacFacilityDesc] :\n  (db_Nfacility(FacWID, FacFacilityDesc)\n  =>\n  p_has_facility_description(entityForFacility(FacWID),FacFacilityDesc))\n).\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%% TABLE: Nencounter\n%% TABLE PREDICATE: db_Nencounter\n%% PRIMARY-KEY-TO-ENTITY FUNCTION: entityForEncounter\n%% INVERSE FOR PRIMARY-KEY-TO-ENTITY FUNCTION: entityForEncounterToEncWID\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n% Setting up primary key EncWID\n% entityForEncounterToEncWID is an inverse function for entityForEncounter.\n\nfof(inverse_for_entityForEncounter_1,axiom,\n   ! [EncWID] : (entityForEncounterToEncWID(entityForEncounter(EncWID)) = EncWID)\n).\n\nfof(inverse_for_entityForEncounter_2,axiom,\n   ! [P] : (entityForEncounter(entityForEncounterToEncWID(P)) = P)\n).\n\n% Mapping the attribute Nfacility.FacWID to entities of the concept HAI:Facility.\n\nfof(table_Nencounter_represents_instances_of_concept_Encounter,axiom,\n  ! [EncWID, EncPatWID] :\n  (db_Nencounter(EncWID, EncPatWID)\n  =>\n  p_Encounter(entityForEncounter(EncWID)))\n).\n\n\n% Mapping the attribute Nencounter.EncWID to the property HAI:encountersPatient\n\nfof(table_Nencounter_EncWID_assigned_to_encountersPatient,axiom,\n  ! [EncWID, EncPatWID] :\n  (db_Nencounter(EncWID, EncPatWID)\n  =>\n  p_encountersPatient(entityForEncounter(EncWID), entityForPatient(EncPatWID)))\n).\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%% TABLE: NhrAbstract\n%% TABLE PREDICATE: db_NhrAbstract\n%% PRIMARY-KEY-TO-ENTITY FUNCTION: entityForAbstract\n%% INVERSE FOR PRIMARY-KEY-TO-ENTITY FUNCTION: entityForAbstractTohraWID\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n% Setting up primary key hraWID\n% entityForAbstractTohraWID is an inverse function for entityForAbstract.\n\nfof(inverse_for_entityForAbstract_1,axiom,\n   ! [HraWID] : (entityForAbstractTohraWID(entityForAbstract(HraWID)) = HraWID)\n).\n\nfof(inverse_for_entityForAbstract_2,axiom,\n   ! [P] : (entityForAbstract(entityForAbstractTohraWID(P)) = P)\n).\n\n% Mapping the attribute NhrAbstract.hraWID to entities of the concept HAI:Abstract.\n\n%fof(table_NhrAbstract_represents_instances_of_concept_Abstract,axiom,\n%  ! [HraWID, HraEncWID, HraPatWID] :\n%  (db_NhrAbstract(HraWID, HraEncWID, HraPatWID)\n%  =>\n%  p_Abstract(entityForAbstract(HraWID)))\n%).\n\n% Mapping the attribute NhrAbstract.hraWID to entities of the concept HAI:Abstract.\n\nfof(table_NhrAbstract_represents_instances_of_concept_Abstract,axiom,\n  ! [HraWID, HraEncWID, HraPatWID] :\n  (db_NhrAbstract(HraWID, HraEncWID, HraPatWID)\n  =>\n  p_abstractRecordForPatient(entityForAbstract(HraWID), entityForPatient(HraPatWID)))\n).\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%% TABLE: NhrDiagnosis\n%% TABLE PREDICATE: db_NhrDiagnosis\n%% PRIMARY-KEY-TO-ENTITY FUNCTION: entityForDiagnosis\n%% INVERSE FOR PRIMARY-KEY-TO-ENTITY FUNCTION: entityForDiagnosisTohdgWID\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n% Setting up primary key hdgWID\n% entityForDiagnosisTohdgWID is an inverse function for entityForDiagnosis.\n\nfof(inverse_for_entityForDiagnosis_1,axiom,\n   ! [HdgWID] : (entityForDiagnosisTohdgWID(diagnosisEntity(HdgWID)) = HdgWID)\n).\n\nfof(inverse_for_entityForDiagnosis_2,axiom,\n   ! [P] : (entityForDiagnosis(entityForDiagnosisTohdgWID(P)) = P)\n).\n\n% Mapping the attribute NhrDiagnosis.hdgWID to entities of the concept HAI:Diagnosis.\n\nfof(table_NhrDiagnosis_represents_instances_of_concept_Diagnosis,axiom,\n  ! [HdgWID, HdgHraWID, HdgHraEncWID, HdgCd] :\n  (db_NhrDiagnosis(HdgWID, HdgHraWID, HdgHraEncWID, HdgCd)\n  =>\n  p_Diagnosis(entityForDiagnosis(HdgWID)))\n).\n\n% Mapping the attribute NhrDiagnosis.hdgCd to the property HAI:has_diagnosis_code.\n\nfof(table_NhrDiagnosis_represents_has_diagnosis_code,axiom,\n  ! [HdgWID, HdgHraWID, HdgHraEncWID, HdgCd] :\n  (db_NhrDiagnosis(HdgWID, HdgHraWID, HdgHraEncWID, HdgCd)\n  =>\n  p_has_diagnosis_code(entityForDiagnosis(HdgWID), HdgCd))\n).\n\n% Mapping the attribute NhrDiagnosis.hdgHraEncWID to the property HAI:diagnosisEncountered.\n\nfof(table_NhrDiagnosis_represents_diagnosis_encountered,axiom,\n  ! [HdgWID, HdgHraWID, HdgHraEncWID, HdgCd] :\n  (db_NhrDiagnosis(HdgWID, HdgHraWID, HdgHraEncWID, HdgCd)\n  =>\n  p_diagnosis_encountered(entityForDiagnosis(HdgWID), entityForEncounter(HdgHraEncWID)))\n).\n\n% Mapping the attribute NhrDiagnosis.HdgHraWID to the property HAI:hasAbstractRecord.\n\nfof(table_NhrDiagnosis_represents_has_abstract_record,axiom,\n  ! [HdgWID, HdgHraWID, HdgHraEncWID, HdgCd] :\n  (db_NhrDiagnosis(HdgWID, HdgHraWID, HdgHraEncWID, HdgCd)\n  =>\n  p_has_abstract_record(entityForDiagnosis(HdgWID), entityForAbstract(HdgHraWID)))\n).\n\nfof(arbitrary_rule,axiom,\n  ! [Diag, Pat, Abs] :\n  ( (p_has_abstract_record(Diag, Abs)\n  &\n  p_abstractRecordForPatient(Abs, Pat))\n  =>\n  p_is_performed_for(Diag, Pat)\n)).\n\n%fof(arbitrary_rule,axiom,\n%  ! [Diag, Pat, Abs] :\n%  ( (p_has_abstract_record(Diag, Abs)\n%  &\n%  p_abstractRecordForPatient(Abs, Pat))\n%  =>\n%  p_has_diagnosis(Pat, Dia)\n%)).';